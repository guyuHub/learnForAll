version: '3.4'

services:

  zook1:
    image: zookeeper
    restart: always
    hostname: zook1
    ports:
      - 4181:4181
    volumes:
     - I:\docekerWorkSpace\learForAll\store\zookeeper\zookeeper1\data:/data
     - I:\docekerWorkSpace\learForAll\store\zookeeper\zookeeper1\datalog:/datalog
     - I:\docekerWorkSpace\learForAll\store\zookeeper\zookeeper1\logs:/logs  
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zook1:2888:3888;4181 server.2=zook2:2888:3888;4181 server.3=zook3:2888:3888;4181
    networks:
       - zookeeper-net

  zook2:
    image: zookeeper
    restart: always
    hostname: zook2
    ports:
      - 4182:4181
    volumes:
     - I:\docekerWorkSpace\learForAll\store\zookeeper\zookeeper2\data:/data
     - I:\docekerWorkSpace\learForAll\store\zookeeper\zookeeper2\datalog:/datalog
     - I:\docekerWorkSpace\learForAll\store\zookeeper\zookeeper2\logs:/logs
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zook1:2888:3888;4181 server.2=zook2:2888:3888;4181 server.3=zook3:2888:3888;4181
    networks:
       - zookeeper-net
  zook3:
    image: zookeeper
    restart: always
    hostname: zook3
    ports:
      - 4183:4181
    volumes:
     - I:\docekerWorkSpace\learForAll\store\zookeeper\zookeeper3\data:/data
     - I:\docekerWorkSpace\learForAll\store\zookeeper\zookeeper3\datalog:/datalog
     - I:\docekerWorkSpace\learForAll\store\zookeeper\zookeeper3\logs:/logs
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zook1:2888:3888;4181 server.2=zook2:2888:3888;4181 server.3=zook3:2888:3888;4181
    networks:
       - zookeeper-net

  kafka1:
    image: bitnami/kafka:latest
    restart: always
    hostname: kafka1
    container_name: kafka1
    ports:
      - 9093:9093
      - 9193:9193
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT:zook1:4181,zook2:4181,zook3:4181
      - ALLOW_PLAINTEXT_LISTENER:'yes'
      - KAFKA_CFG_JMX_PORT:9999
    volumes:
      - I:\docekerWorkSpace\learForAll\store\kafka\kafka1\data:/bitnami/kafka
    external_links:
      - zook1
      - zook2
      - zook3
    networks:
      - kafka-net
    depends_on:
      - zook1
      - zook2
      - zook3

  kafka2:
    image: bitnami/kafka:latest
    restart: always
    hostname: kafka2
    container_name: kafka2
    ports:
      - 9094:9094
      - 9194:9194
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT:zook1:4181,zook2:4181,zook3:4181
      - ALLOW_PLAINTEXT_LISTENER:'yes'
      - JMX_PORT:9999
    volumes:
      - I:\docekerWorkSpace\learForAll\store\kafka\kafka2\data:/bitnami/kafka
    links:
      - zook1
      - zook2
      - zook3
    networks:
      - kafka-net
    depends_on:
      - zook1
      - zook2
      - zook3

  kafka3:
    image: bitnami/kafka:latest
    restart: always
    hostname: kafka3
    container_name: kafka3
    ports:
      - 9095:9095
      - 9195:9195
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT:zook1:4181,zook2:4181,zook3:4181
      - ALLOW_PLAINTEXT_LISTENER:'yes'
      - JMX_PORT:9999
    volumes:
      - I:\docekerWorkSpace\learForAll\store\kafka\kafka3\data:/bitnami/kafka
    links:
      - zook1
      - zook2
      - zook3
    networks:
      - kafka-net
    depends_on:
      - zook1
      - zook2
      - zook3

  kafka-manager:
    image: scjtqs/kafka-manager:latest
    restart: always
    hostname: kafka-manager
    container_name: kafka-manager
    ports:
      - 9000:9000
    links:
      - zook1
      - zook2
      - zook3
      - kafka1
      - kafka2
      - kafka3
    environment:
      ZK_HOSTS: zook1:4181,zook2:4181,zook3:4181
      KAFKA_BROKERS: kafka1:9093,kafka2:9094,kafka3:9095
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    networks:
      - kafka-net
networks:
  zookeeper-net:
    driver: bridge
  kafka-net:
    driver: bridge
